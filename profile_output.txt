Timer unit: 1e-07 s

Total time: 7.4e-06 s
File: C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py
Function: __len__ at line 25

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    25                                               @profile
    26                                               def __len__(self):
    27         3         74.0     24.7    100.0          return len(self.data)

Total time: 0.0034143 s
File: C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py
Function: __init__ at line 42

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    42                                               @profile
    43                                               def __init__(self):
    44         1        284.0    284.0      0.8          super(CNN, self).__init__()
    45         1       8778.0   8778.0     25.7          self.conv1 = nn.Conv2d(1, 32, 3, padding=1)
    46         1       2789.0   2789.0      8.2          self.conv2 = nn.Conv2d(32, 64, 3, padding=1)
    47         1       3406.0   3406.0     10.0          self.conv3 = nn.Conv2d(64, 64, 3, padding=1)
    48         1       3377.0   3377.0      9.9          self.conv4 = nn.Conv2d(64, 64, 3, padding=1)
    49         1       3537.0   3537.0     10.4          self.conv5 = nn.Conv2d(64, 64, 3, padding=1)
    50         1       3573.0   3573.0     10.5          self.conv6 = nn.Conv2d(64, 64, 3, padding=1)
    51         1       3713.0   3713.0     10.9          self.conv7 = nn.Conv2d(64, 64, 3, padding=1)
    52         1        880.0    880.0      2.6          self.pool = nn.MaxPool2d(2, 2)
    53         1       1962.0   1962.0      5.7          self.fc1 = nn.Linear(64, 64)
    54         1       1424.0   1424.0      4.2          self.fc2 = nn.Linear(64, 8)
    55         1        420.0    420.0      1.2          self.relu = nn.ReLU()

Total time: 0.0205849 s
File: C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py
Function: __init__ at line 20

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    20                                               @profile
    21                                               def __init__(self, csv_file, transform=None):
    22         1     205844.0 205844.0    100.0          self.data = pd.read_csv(csv_file)
    23         1          5.0      5.0      0.0          self.transform = transform

Total time: 0.752878 s
File: C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py
Function: validate at line 85

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    85                                           @profile
    86                                           def validate(model, val_loader, criterion, device):
    87         4      17022.0   4255.5      0.2      model.eval()
    88         4         24.0      6.0      0.0      running_loss = 0.0
    89         8       2571.0    321.4      0.0      with torch.no_grad():
    90         8     142774.0  17846.8      1.9          for images, points in tqdm(val_loader, desc="Validating"):
    91         4     113009.0  28252.2      1.5              images, points = images.to(device), points.to(device)
    92         4     240452.0  60113.0      3.2              outputs = model(images)
    93         4      14040.0   3510.0      0.2              loss = criterion(outputs, points)
    94         4    6998776.0    2e+06     93.0              running_loss += loss.item()
    95         4        111.0     27.8      0.0      return running_loss / len(val_loader)

Total time: 1.47914 s
File: C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py
Function: forward at line 57

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    57                                               @profile
    58                                               def forward(self, x):
    59         8    2856684.0 357085.5     19.3          x = self.pool(self.relu(self.conv1(x)))
    60         8    1756588.0 219573.5     11.9          x = self.pool(self.relu(self.conv2(x)))
    61         8      66687.0   8335.9      0.5          x = self.pool(self.relu(self.conv3(x)))
    62         8      50704.0   6338.0      0.3          x = self.pool(self.relu(self.conv4(x)))
    63         8    8511209.0    1e+06     57.5          x = self.pool(self.relu(self.conv5(x)))
    64         8     189236.0  23654.5      1.3          x = self.pool(self.relu(self.conv6(x)))
    65         8     103794.0  12974.2      0.7          x = self.pool(self.relu(self.conv7(x)))
    66         8       1375.0    171.9      0.0          x = x.view(-1, 64)
    67         8    1248781.0 156097.6      8.4          x = self.relu(self.fc1(x))
    68         8       6257.0    782.1      0.0          x = self.fc2(x)
    69         8         38.0      4.8      0.0          return x

Total time: 32.028 s
File: C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py
Function: train at line 71

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    71                                           @profile
    72                                           def train(model, train_loader, criterion, optimizer, device):
    73         4      12437.0   3109.2      0.0      model.train()
    74         4         32.0      8.0      0.0      running_loss = 0.0
    75         8     145158.0  18144.8      0.0      for images, points in tqdm(train_loader, desc="Training"):
    76         4     613248.0 153312.0      0.2          images, points = images.to(device), points.to(device)
    77         4      23927.0   5981.8      0.0          optimizer.zero_grad()
    78         4   14557083.0    4e+06      4.5          outputs = model(images)
    79         4     287183.0  71795.8      0.1          loss = criterion(outputs, points)
    80         4  110508644.0    3e+07     34.5          loss.backward()
    81         4    6107937.0    2e+06      1.9          optimizer.step()
    82         4  188024720.0    5e+07     58.7          running_loss += loss.item()
    83         4        117.0     29.2      0.0      return running_loss / len(train_loader)

Total time: 289.907 s
File: C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py
Function: __getitem__ at line 29

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    29                                               @profile
    30                                               def __getitem__(self, idx):
    31       479    1254143.0   2618.3      0.0          img_path = self.data.iloc[idx, 0]
    32       479    2947867.0   6154.2      0.1          points = self.data.iloc[idx, 1:].values.astype('float32')
    33                                           
    34       479   30959990.0  64634.6      1.1          image = Image.open(img_path)#.convert('L')  # Convert to grayscale
    35                                           
    36       479       9986.0     20.8      0.0          if self.transform:
    37       479 2863494789.0    6e+06     98.8              image = self.transform(image)
    38                                           
    39       479     401746.0    838.7      0.0          return image, torch.tensor(points)

Total time: 325.432 s
File: C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py
Function: main at line 97

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    97                                           @profile
    98                                           def main():
    99                                               # Settings
   100         1          5.0      5.0      0.0      batch_size = 'all'
   101                                           
   102                                               # Set up device
   103         1   12582514.0    1e+07      0.4      device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
   104         1       1470.0   1470.0      0.0      print(f"Using {device}")
   105                                           
   106                                               # Set up data transformations
   107         2        445.0    222.5      0.0      transform = transforms.Compose([
   108         1       1321.0   1321.0      0.0          transforms.Resize((224, 224)),
   109         1         60.0     60.0      0.0          transforms.ToTensor(),
   110         1        244.0    244.0      0.0          transforms.Grayscale(num_output_channels=1),  
   111                                               ])
   112                                           
   113                                               # Initialize the model, loss function, and optimizer
   114         1     206047.0 206047.0      0.0      model = CNN().to(device)
   115         1        110.0    110.0      0.0      print(f"Model has {sum([p.numel() for p in model.parameters()]):,} parameters")
   116         1         42.0     42.0      0.0      criterion = nn.MSELoss()
   117         1       2952.0   2952.0      0.0      optimizer = optim.Adam(model.parameters(), lr=0.001)
   118         1        719.0    719.0      0.0  
   119         1        688.0    688.0      0.0      # Create datasets
   120                                               dataset = CustomDataset('corners.csv', transform=transform)
   121                                               train_size = int(0.8 * len(dataset))
   122         1       1909.0   1909.0      0.0      val_size = len(dataset) - train_size
   123         1        397.0    397.0      0.0      train_dataset, val_dataset = torch.utils.data.random_split(dataset, [train_size, val_size])
   124                                               print(f"{train_size:,} items in train dataset.")
   125         1 2452540906.0    2e+09     75.4      print(f"{val_size:,} items in val dataset.")
   126         1  447202741.0    4e+08     13.7  
   127                                               # Create data loaders
   128                                               train_loader = DataLoader(train_dataset, batch_size=(train_size if batch_size == 'all' else batch_size), shuffle=True)
   129         1   13600157.0    1e+07      0.4      val_loader = DataLoader(val_dataset, batch_size=(val_size if batch_size == 'all' else batch_size), shuffle=False)
   130         1       2860.0   2860.0      0.0  
   131         1        627.0    627.0      0.0      train_set = [item for item in tqdm(train_loader, desc="Loading train dataset")]
   132         1       3735.0   3735.0      0.0      val_set = [item for item in tqdm(val_loader, desc="Loading val dataset")]    
   133                                           
   134                                               # Training loop
   135         1          4.0      4.0      0.0      num_epochs = 4
   136         5        102.0     20.4      0.0      for epoch in range(num_epochs):
   137         4  320287608.0    8e+07      9.8          train_loss = train(model, train_set, criterion, optimizer, device)
   138         4    7532346.0    2e+06      0.2          val_loss = validate(model, val_set, criterion, device)
   139         4       1111.0    277.8      0.0          clear_lines(2)
   140         4       5420.0   1355.0      0.0          print(f"Epoch {epoch+1}/{num_epochs}, Train Loss: {train_loss:.4f}, Val Loss: {val_loss:.4f}")
   141                                           
   142                                               # Save the model
   143         1     343837.0 343837.0      0.0      torch.save(model, 'cornerModels/model.pt')

  0.00 seconds - C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py:25 - __len__
  0.00 seconds - C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py:42 - __init__
  0.02 seconds - C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py:20 - __init__
  0.75 seconds - C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py:85 - validate
  1.48 seconds - C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py:57 - forward
 32.03 seconds - C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py:71 - train
289.91 seconds - C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py:29 - __getitem__
325.43 seconds - C:\Users\aaron\CODING\ergScreenReader\cornersTrain.py:97 - main
